name: Spring Boot Github Action CI Workflow
on: [push, pull_request, workflow_dispatch]
permissions:
  contents: read
  checks: write
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - name: Checking Out Source Code
          uses: actions/checkout@v4
        - name: Validate Gradle Wrapper
          uses: gradle/wrapper-validation-action@v1
        - name: Setting Up Java to JDK 21
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: '21'
        - name: Compiling Source Code
          run: ./gradlew compileJava
        - name: Running Unit Tests
          run: ./gradlew test
        - name: Upload Unit Test Report
          uses: actions/upload-artifact@v2
          with:
            name: unit-test-report
            path: '**/build/reports/tests/test/'
        - name: Publish Unit Test Report
          uses: mikepenz/action-junit-report@v4
          if: success() || failure() # always run even if the previous step fails
          with:
            report_paths: '**/build/test-results/test/TEST-*.xml'
            check_name: 'JUnit Test Report'
        - name: Running Integration Tests
          run: ./gradlew integrationTest
        - name: Upload Integration Test Report
          uses: actions/upload-artifact@v2
          with:
            name: integration-test-report
            path: '**/build/reports/tests/integrationTest/'
        - name: Publish Integration Test Report
          uses: mikepenz/action-junit-report@v4
          if: success() || failure() # always run even if the previous step fails
          with:
            report_paths: '**/build/test-results/integrationTest/TEST-*.xml'
            check_name: 'JUnit Integration Test Report'
        - name: Run JaCoCo Test Coverage
          run: ./gradlew jacocoTestReport
        - name: Upload JaCoCo Test Coverage Report
          uses: actions/upload-artifact@v2
          with:
            name: jacoco-test-coverage-report
            path: '**/build/reports/jacoco/test/'
        - name: Add coverage to PR
          id: jacoco
          uses: madrapps/jacoco-report@v1.6.1
          with:
            paths: '**/build/reports/jacoco/test/jacoco-report.xml'
            token: ${{ secrets.GITHUB_TOKEN }}
            min-coverage-overall: 40
            min-coverage-changed-files: 60
        - name: Code Coverage Verification
          run: ./gradlew jacocoTestCoverageVerification
        - name: Check Code Style
          run: ./gradlew checkstyleMain checkstyleTest checkstyleIntegrationTest
        - name: Upload Code Checkstyle Report
          uses: actions/upload-artifact@v2
          with:
            name: code-checkstyle-report
            path: '**/build/reports/checkstyle/'
        - name: Publish Checkstyle Test Report
          uses: jwgmeligmeyling/checkstyle-github-action@master
          with:
            path: '**/build/reports/checkstyle/main.xml'
        - name: Running Spotbugs
          run: ./gradlew spotbugsMain spotbugsTest spotbugsIntegrationTest
        - name: Upload Spotbugs Report
          uses: actions/upload-artifact@v2
          with:
            name: code-spotbugs-report
            path: '**/build/reports/spotbugs/'
        - uses: jwgmeligmeyling/spotbugs-github-action@master
          with:
            path: '**/build/reports/spotbugs/spotbugs.xml'
#        - name: Running PMD
#          run: ./gradlew pmdMain pmdTest pmdIntegrationTest
#        - uses: jwgmeligmeyling/pmd-github-action@master
#          with:
#            path: '**/build/reports/pmd/main.xml'



        - name: Create SpringBoot Jar file
          run: ./gradlew bootJar
        - name: Copy Jar file
          run: mv build/libs/$(ls build/libs) app.jar
        - uses: actions/upload-artifact@master
          with:
            name: jar-file
            path: app.jar

  build-docker-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@master
        with:
          name: jar-file
          path: app.jar
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set env
        run: echo "DATE=$(date +%s)" >> $GITHUB_ENV
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: fdlessard/spring-boot-github-action-app:${{ env.DATE }}
#        - name: Upload Build Reports
#          uses: actions/upload-artifact@v3
#          if: always()
#          with:
#            name: build-reports
#            path: build/reports/

